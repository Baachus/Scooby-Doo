@model X.PagedList.IPagedList<ScoobWebApp.ScoobRelation>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Relationships";
}
<h1 id="Banner">List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@using(Html.BeginForm("List", "Relationship", FormMethod.Get))
{
    <p>
        Find Relationship: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" data-testid="Name_Search" id="Name_Search" />
    </p>
}
<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th id="Id_Header">
                    @Html.ActionLink("Id", "List", new {sortOrder = ViewBag.IdSortParam, currentFilter=ViewBag.CurrentFilter})
                </th>
                <th id="Name_Header">
                    @Html.ActionLink("Name", "List", new {sortOrder = ViewBag.NameSortParam, currentFilter=ViewBag.CurrentFilter})
                </th>
                <th id="Gang_Header">
                    @Html.ActionLink("Gang", "List", new {sortOrder = ViewBag.GangSortParam, currentFilter=ViewBag.CurrentFilter})
                </th>
                <th id="Relationship_Header">
                    @Html.ActionLink("Relationship", "List", new {sortOrder = ViewBag.RelationshipSortParam, currentFilter=ViewBag.CurrentFilter})
                </th>
                <th id="Apperance_Header">
                    @Html.DisplayNameFor(model => model[0].Appearance)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gang)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Relationship)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Appearance)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id=item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
</div>
<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
    @Html.PagedListPager(Model, page => Url.Action("List",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
